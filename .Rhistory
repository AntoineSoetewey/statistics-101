shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
runApp()
shiny::runApp()
runApp()
(1-0.1)/0.1
9 + (sqrt(0.9/(0.1^2)))
4*sqrt(0)
9+(4*9.487)
1+(4*1.414)
1+(*1.414)
1+(5*1.414)
9+(5*9.487)
runApp()
x <- c(2, 1.98, 1.94, 2, 1.97, 2.03, 1.95, 1.97, 1.99, 2.02)
mean(x)
sd(x)
(1.985 - 2) / (sd(x) / sqrt(length(x)))
length(x)
(1.985 - 2) / (sqrt(0.006) / sqrt(length(x)))
(1.985 - 2) / sqrt(0.006 / length(x))
t.test(x, mu = 2)
library(DescTools)
ZTest(x, mu = 2, sd_pop = 0.006^2)
ZTest(x, mu = 2, sd_pop = sqrt(0.006))
runApp()
phyper(100, 500, 50)
phyper(8, 100, 500, 50)
phyper(x = 8, m = 50, n = 450, k = 50)
phyper(8, m = 50, n = 450, k = 50)
phyper(8, m = 50, n = 450, k = 50, lower.tail = TRUE)
phyper(8, m = 50, n = 500, k = 50, lower.tail = TRUE)
phyper(8, m = 50, n = 450, k = 100, lower.tail = TRUE)
runApp()
runApp()
runApp()
3.6276^2
runApp()
runApp()
shiny::runApp()
1 + (4*log(0.001))
1 + 4*0.001
2.131 + (4*4.009)
runApp()
exp(10 + ((1.23^2) / 2))
162754.791 + (4*1191540.155)
runApp()
162754.791 + (4*log(1191540.155))
1/649 + log(2.161)
1/649 + exp(2.161)
1.649 + log(2.161)
log(1.649 +2.161)
exp(1.649 + 2.161)
runApp()
log(1)
log(4)
log(2)
1.649 + log(2.161)
1.649 + 5*log(2.161)
7.389 + (5*log(54.096))
90 + (5*8102)
runApp()
qlnorm(0.001)
qlnorm(0.001, meanlog = 0, sdlog = 1)
qlnorm(0.001, meanlog = 0, sdlog = 1, lower.tail = FALSE)
qlnorm(0.001, meanlog = 10, sdlog = 2, lower.tail = FALSE)
log(qlnorm(0.001, meanlog = 10, sdlog = 2, lower.tail = FALSE))
log(2309000)
exp(2000000)
log(692433983936.7119)
runApp()
qlnorm(0.01, meanlog = input$mean_lognormal, sdlog = input$sd_lognormal)
qlnorm(0.01, meanlog = 0, sdlog = 1)
qlnorm(0.99, meanlog = 0, sdlog = 1)
qlnorm(0.999, meanlog = 0, sdlog = 1)
log(qlnorm(0.999, meanlog = 0, sdlog = 1))
qlnorm(0.999, meanlog = 0, sdlog = 1)
qlnorm(0.999, meanlog = 10, sdlog = 2)
log(qlnorm(0.999, meanlog = 10, sdlog = 2))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pnbinom(3, size = 5, prob = 0.5)
runApp()
qnbinom(0.99, 7, 0.52)
qnbinom(0.999, 7, 0.52)
runApp()
ceiling(1.1)
runApp()
runApp()
runApp()
runApp()
punif(3)
punif(3, max = 7)
punif(3, max = 10)
3/7
runApp()
runApp()
6.6856 + 4*0.735
9.5135 - 4*1.1446
qweibull(0.99, 10, 10)
qweibull(0.999, 10, 10)
9.5135 + 4*1.1446
tau
9.5135 + 4*1.1446
qweibull(0.999, 10, 10)
qweibull(0.9999, 10, 10)
qweibull(0.99999, 10, 10)
runApp()
ceiling(qweibull(0.99999, shape = input$alpha_weibull, scale = input$beta_weibull))
ceiling(qweibull(0.99999, shape = 5, scale = 1))
(qweibull(0.99999, shape = 5, scale = 1)
(qweibull(0.99999, shape = 5, scale = 1)
qweibull(0.99999, shape = 5, scale = 1)
qweibull(0.00001, shape = 5, scale = 1)
qweibull(0.99999, shape = 5, scale = 1, lower.tail = TRUE)
qweibull(0.99999, shape = 5, scale = 1, lower.tail = FALSE)
runApp()
weibullparinv(shape = 5, scale = 1)
install.packages("mixdist")
library(mixdist)
weibullparinv(shape = 5, scale = 1)
str(weibullparinv(shape = 5, scale = 1))
runApp()
runApp()
qbeta(0.99999, 0.5, 0.5)
qbeta(0.99999, 0.5, 0.5, lower.tail = TRUE)
qbeta(0.99999, 0.5, 0.5, lower.tail = FALSE)
runApp()
runApp()
dbinom(0.99999, size = 20, prob = 0.5, lower.tail = FALSE)
dbinom(0.99999, size = 20, prob = 0.5)
dbinom(0, size = 20, prob = 0.5)
qbinom(0.99999, size = 20, prob = 0.5, lower.tail = FALSE)
qbinom(0.99999, size = 20, prob = 0.5, lower.tail = TRUE)
runApp()
runApp()
runApp()
qcauchy(0.99999, 0, 1)
qcauchy(0.99999, 0, 1, lower.tail = TRUE)
qcauchy(0.99999, 0, 1, lower.tail = FALSE)
runApp()
qcauchy(0.9, 0, 1)
qcauchy(0.9, 0, 1, lower.tail = FALSE)
qcauchy(0.9, 0, 10, lower.tail = FALSE)
qcauchy(0.99999, 0, 1, lower.tail = FALSE)
runApp()
qchisq(0.99999, df = input$df_chisquare, lower.tail = FALSE)
qchisq(0.99999, df = 1, lower.tail = FALSE)
qchisq(0.99999, df = 9999, lower.tail = FALSE)
runApp()
qexp(0.99999, rate = 1, lower.tail = FALSE)
qexp(0.99999, rate = 1, lower.tail = TRUE)
runApp()
runApp()
runApp()
qgeom(0.99999, p = 0.01)
qgeom(0.99999, p = 0.01, lower.tail = TRUE)
qgeom(0.99999, p = 0.01, lower.tail = FALSE)
qgeom(0.99999, prob = 0.01, lower.tail = FALSE)
qgeom(0.99999, prob = 0.01, lower.tail = TRUE)
runApp()
runApp()
runApp()
install.packages("mixdist")
shiny::runApp()
shiny::runApp()
runApp()
pnbinom(7-5, 5, 0.5)
pnbinom(7-5, 5, 0.5, lower.tail = TRUE)
pnbinom(7-5, 5, 0.5, lower.tail = FALSE)
pnbinom(7-5-1, 5, 0.5, lower.tail = FALSE)
pnbinom(7-5, 5, 0.5, lower.tail = TRUE)
pnbinom(5-5, 5, 0.5, lower.tail = TRUE)
dnbinom(5-5, 5, 0.5, lower.tail = TRUE)
dnbinom(7-5, 5, 0.5, lower.tail = TRUE)
qnbinom(0.999, size = 5, prob = 0.5, lower.tail = TRUE)
qnbinom(0.999, size = 5, prob = 0.5, lower.tail = TRUE)
dnbinom(5:19, size = 5, prob = 0.5)
dnbinom(1:19, size = 5, prob = 0.5)
dnbinom(9:19, size = 5, prob = 0.5)
dnbinom(0:19, size = 5, prob = 0.5)
runApp()
runApp()
shiny::runApp()
runApp()
library(profvis)
install.packages("profvis")
library(profvis)
profvis(runApp())
profvis(runApp())
shiny::runApp()
shiny::runApp()
runApp()
styler:::style_active_file()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("waiter")
library(waiter)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("library(shinyjs)")
install.packages("shinyjs")
library(shinyjs)
runApp()
runApp()
runApp()
runApp()
runApp()
runif(1) / 2
runApp()
runif(30)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?waiter::spinners
browse_waiters()
runApp()
shiny::runApp()
?spinner
?spinners
?spinners
runApp()
runApp()
browse_waiters
browse_waiters()
runApp()
runApp()
?spinners
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
